# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master
      - actions
      - release/*
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
#    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10.x] #[10.x, 12.x]
#        os: [ubuntu-latest, windows-latest,macOS-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8.2"
    - name: Install dependencies
      run: |
        echo "check python version"
        python -V
        python -m pip install --upgrade pip
        python -m pip install pipenv
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v1
      if: runner.os != 'Windows'
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
      env:
        CI: true
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master  
      env:
        GITHUB_TOKEN: ${{ secrets.github }}
        SONAR_TOKEN: ${{ secrets.sonarcloud }}
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.snyk }}
      with:
        command: monitor
    # Connect to Azure Container registry (ACR)
    # test
    - uses: azure/docker-login@v1 
      with:
        login-server: acraltug.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    # Docker build and push to a Azure Container registry (ACR)
    - run: |
       docker build . -t acraltug.azurecr.io/k8sdemo:${{ github.sha }} -f Dockerfile.prod
       docker push acraltug.azurecr.io/k8sdemo:${{ github.sha }}
    # Set the target AKS cluster.
  deployment:
    # deploy to AKS
    needs: build
    runs-on: ubuntu-latest
    steps:    
    # download binary
    - uses: actions/checkout@v2
    # start AKS things
    - uses: azure/aks-set-context@v1 
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' 
        cluster-name: swoaks01
        resource-group: altug
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1 
      with:
        container-registry-url: acraltug.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }} 
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }} 
        secret-name: acr-secret
        namespace: githubactionsdemo
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1 
      with:
        namespace: githubactionsdemo
        manifests: |
          kubernetes/demodeployment.yaml
        images: |
          acraltug.azurecr.io/k8sdemo:${{ github.sha }} 
        imagepullsecrets: |
          acr-secret
          namespace: githubactionsdemo
    ## generating report and pull request
    - name: Create report file
      run: date +%s > report.txt
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v2
      with:
        token: ${{ secrets.github }}
        commit-message: Add report file
        #dinamik olur mu diye bir bak
        committer: Altug Yildirim <altugyildirim1993@gmail.com>
        author: Altug Yildirim <altugyildirim1993@gmail.com>
        title: '[Example] Add report file'
        body: |
           New report
           - Contains *today's* date
           - Auto-generated by [create-pull-request][1]
           [1]: https://github.com/altugyildirim/create-pull-request
        labels: report, automated pr
        assignees: altugyildirim
        reviewers: altugyildirim
        team-reviewers: owners, maintainers
        milestone: 1
        project: Example Project
        project-column: To do
        branch: example-patches
        request-to-parent: false
    - name: Check outputs
      run: |
        echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
        echo "Pull Request Number - ${{ steps.cpr.outputs.pr_number }}"
      